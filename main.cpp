#include <stdio.h>  //标准输入输出
#include <math.h>
//一维数组 二维数组 指针 二次指针
int main() {
    int a[3][4] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
    /**
     * 一维数组的数组名代表数组首元素的地址int a[5]->a的类型是int *
     * 二维数组的数组名同样代表数组首元素的地址int m[2][5]->m的类型是int(*)[5]
     * a[3][4]  === int(*)[4]
     *
     * 而   两者有区别
     *  **a   ====  *a[4]
     *  二级指针 指向指针的指针
     */
    //相当于 p[][4];  (*p)[4]=**p =p[][]  自右向左结合  []运算优先级大于*
    //数组指针
    //是一个指针 指向数组  如果是二维数组必须要带上后面的值
    int (*p)[4];

    //**********
    //int a[4] = {0, 1, 2, 3};
    //指针数组
    //是一个数组 里面放着指向数组的指针或者就是指针
    //int *p[4] = {a};
    //**********

    int i,j;
    //这里是将p 指向 a的地址   *行 四列  行数不确定  根据偏移往后加
    //并且如果a 变成一维数组也会出错
    //二维以上的就用

    p = a;
    for(i = 0; i < 3; i++){
        for( j = 0; j < 4;j++){
            printf("%2d ", *(*(p+i)+j));
        }
        printf("\n");
    }
    return 0;
};

